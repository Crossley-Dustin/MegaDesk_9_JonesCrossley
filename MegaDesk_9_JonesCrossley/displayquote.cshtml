@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Display MegaDesk Quotes";

    var quoteID = "";
    var customerName = "";
    var quoteDate = "";
    var quoteAmount = "";
    var rushOrderDays = "";
    var deskWidth = "";
    var deskDepth = "";
    var drawerCount = "";
    var surfaceMaterial = "";

    if (!IsPost)
    {
        if (!Request.QueryString["ID"].IsEmpty() && Request.QueryString["ID"].IsInt())
        {
            quoteID = Request.QueryString["ID"];
            var db = Database.Open("MegaDeskQuotes");
            var dbCommand = "SELECT * FROM DeskQuote WHERE ID = @0";
            var row = db.QuerySingle(dbCommand, quoteID);

            if (row != null)
            {
                customerName = row.CustomerName;
                quoteAmount = row.QuoteAmount.ToString();
                quoteDate = row.QuoteDate.ToString();
                rushOrderDays = row.RushOrderDays.ToString();
                deskWidth = row.Width.ToString();
                deskDepth = row.Depth.ToString();
                drawerCount = row.DrawerCount.ToString();
                surfaceMaterial = row.SurfaceMaterial; // Enum.GetName(typeof(MegaDesk_9_JonesCrossley.Desk.DesktopMaterial), (int)row.SurfaceMaterial);
            }
            else
            {
                Validation.AddFormError("No quote was found for that ID.");
            }

        }
        else
        {
            Validation.AddFormError("No quote was selected.");
        }
    }
}

<h1>Display Quote</h1>
<p>
    <label for="customerName">Customer Name</label>
    <input type="text" name="customerName" value="@customerName" readonly />
    @*@Html.ValidationMessage("customerName")*@
</p>
<p>
    <label for="quoteDate">Quote Date</label>
    <input type="text" name="quoteDate" value="@quoteDate" readonly />
</p>
<p>
    <label for="quoteAmount">Quote Amount</label>
    <input type="text" name="quoteAmount" value="@string.Format("{0:C}", System.Convert.ToDecimal(quoteAmount))" readonly />
</p>
<p>
    <label for="rushDays">Rush Order Days</label>
    <input type="text" name="rushDays" value="@rushOrderDays" readonly />
    @*@Html.DropDownList("rushDays", MegaDesk_9_JonesCrossley.DeskQuote.RushDaysSelect())
        @Html.ValidationMessage("rushDays")*@
</p>
<p>
    <label for="deskWidth">Desk Width</label>
    <input type="text" name="deskWidth" value="@deskWidth" readonly />
    @*@Html.ValidationMessage("deskWidth")*@
</p>
<p>
    <label for="deskDepth">Desk Depth</label>
    <input type="text" name="deskDepth" value="@deskDepth" readonly />
    @*@Html.ValidationMessage("deskDepth")*@
</p>
<p>
    <label for="drawers">Number of Drawers</label>
    <input type="text" name="drawers" value="@drawerCount" readonly />
    @*<input type="range" min="@MegaDesk_9_JonesCrossley.DeskQuote.MIN_DRAWERS"
           max="@MegaDesk_9_JonesCrossley.DeskQuote.MAX_DRAWERS"
           name="numDrawers" value="@Request.Form["numDrawers"]"
           placeholder="@MegaDesk_9_JonesCrossley.DeskQuote.MIN_DRAWERS to @MegaDesk_9_JonesCrossley.DeskQuote.MIN_DRAWERS Drawers"
           oninput="drawerCount.value = numDrawers.value" />
    <output for="drawers" name="drawerCount">@Request.Form["numDrawers"]</output>
    @Html.ValidationMessage("numDrawers")*@
</p>
<p>
    <label for="surfaceMaterial">Surface Material</label>
    <input type="text" name="surfaceMaterial" value="@surfaceMaterial" readonly />
    @*@Html.DropDownList("surfaceMaterial", MegaDesk_9_JonesCrossley.Desk.DesktopMaterialSelect())
    @Html.ValidationMessage("surfaceMaterial")*@
</p>

<p>
    <a href="~/index.cshtml">Return to Main Menu</a>
</p>